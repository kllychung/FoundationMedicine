{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-13T16:05:36.597Z",
    "end": "2023-06-13T16:05:39.181Z",
    "duration": 2584,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6478277e-fed6-4390-b5ad-f4d83de6a22f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "926f27b2-3b58-4903-a5cb-afcc5f8fbf83",
          "title": "Login endpoint tests",
          "fullFile": "/Users/kellychung/Documents/FoundationMedicine/user-app/tests/login_test.js",
          "file": "/login_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login endpoint tests\"",
              "fullTitle": "Login endpoint tests \"before all\" hook in \"Login endpoint tests\"",
              "timedOut": false,
              "duration": 165,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await addUserToDb(registeredUser)",
              "err": {},
              "uuid": "2446fa8c-ab0a-477b-bbc4-a4bf0a2469d0",
              "parentUUID": "926f27b2-3b58-4903-a5cb-afcc5f8fbf83",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login endpoint tests\"",
              "fullTitle": "Login endpoint tests \"after all\" hook in \"Login endpoint tests\"",
              "timedOut": false,
              "duration": 101,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await deleteUserFromDb(registeredUser.email)",
              "err": {},
              "uuid": "b7ebd808-20e0-4ef7-b703-2ca8297035e0",
              "parentUUID": "926f27b2-3b58-4903-a5cb-afcc5f8fbf83",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Successful login returns valid token",
              "fullTitle": "Login endpoint tests Successful login returns valid token",
              "timedOut": false,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Fill login form with valid login info\nconst postResponse = await loginUser(registeredUser)\n//Verify api returns valid token\nexpect(postResponse.data).to.include.keys(\"access_token\")",
              "err": {},
              "uuid": "73d5ccda-b821-4dee-ab92-76d5c633133e",
              "parentUUID": "926f27b2-3b58-4903-a5cb-afcc5f8fbf83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unregistered user cannot login",
              "fullTitle": "Login endpoint tests Unregistered user cannot login",
              "timedOut": false,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const unregisteredUser = USERS[\"unregisteredUser\"]\nlet error, response;\n//Fill login form with invalid login info\ntry {\n    response = await loginUser(unregisteredUser)\n}\ncatch (err) {\n    error = err\n}\n//Verify unauthorized user cannot login\nexpect(error.response.status).to.equal(401)\nexpect(error.response.data.error_message).to.equal(\"unauthorized\")",
              "err": {},
              "uuid": "479882b0-1434-4a5b-887b-f051fbfd5834",
              "parentUUID": "926f27b2-3b58-4903-a5cb-afcc5f8fbf83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73d5ccda-b821-4dee-ab92-76d5c633133e",
            "479882b0-1434-4a5b-887b-f051fbfd5834"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 8000
        },
        {
          "uuid": "3240342b-b76d-4667-aea7-b0921c04a4f1",
          "title": "Register post endpoints tests",
          "fullFile": "/Users/kellychung/Documents/FoundationMedicine/user-app/tests/register_test.js",
          "file": "/register_test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Register post endpoints tests\"",
              "fullTitle": "Register post endpoints tests \"after all\" hook in \"Register post endpoints tests\"",
              "timedOut": false,
              "duration": 99,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await deleteUserFromDb(userToBeRegsistered.email)",
              "err": {},
              "uuid": "7a0bc652-9389-40ab-9fd0-4557f52e4946",
              "parentUUID": "3240342b-b76d-4667-aea7-b0921c04a4f1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "user info is created in dynamo db after registration",
              "fullTitle": "Register post endpoints tests user info is created in dynamo db after registration",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Fill registration with valid info and submit form\nawait registerUser(userToBeRegsistered)\n//Make a get request to retrieve user from dynamo db\nconst getUserResponse = await getUserFromDb(userToBeRegsistered.email)\n//verify info passed in equals info retrieved\nexpect(userToBeRegsistered).to.eql(getUserResponse.Item);",
              "err": {},
              "uuid": "dff7eaa4-f8ae-4b3c-8a5b-13a772a508df",
              "parentUUID": "3240342b-b76d-4667-aea7-b0921c04a4f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dff7eaa4-f8ae-4b3c-8a5b-13a772a508df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 8000
        },
        {
          "uuid": "4a2a4de3-3c8f-45cd-8550-33c3086198d1",
          "title": "Treasure endpoint tests",
          "fullFile": "/Users/kellychung/Documents/FoundationMedicine/user-app/tests/treasure_test.js",
          "file": "/treasure_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Treasure endpoint tests\"",
              "fullTitle": "Treasure endpoint tests \"before all\" hook in \"Treasure endpoint tests\"",
              "timedOut": false,
              "duration": 102,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await addUserToDb(registeredUser)",
              "err": {},
              "uuid": "ce8f3627-3adf-4dea-943c-611591308423",
              "parentUUID": "4a2a4de3-3c8f-45cd-8550-33c3086198d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Treasure endpoint tests\"",
              "fullTitle": "Treasure endpoint tests \"after all\" hook in \"Treasure endpoint tests\"",
              "timedOut": false,
              "duration": 103,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await deleteUserFromDb(registeredUser.email)",
              "err": {},
              "uuid": "32eb63cb-e583-4cb4-832c-d25673587b0e",
              "parentUUID": "4a2a4de3-3c8f-45cd-8550-33c3086198d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "User can access protected resource using valid token",
              "fullTitle": "Treasure endpoint tests User can access protected resource using valid token",
              "timedOut": false,
              "duration": 1012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Retrieve token from login\nconst postResponse = await loginUser(registeredUser)\nconst token = postResponse.data.access_token\n//Use token to access protected resource\nconst treasureResponse = await retrieveTreasure(token)\nexpect(treasureResponse.status).to.equal(200)\nexpect(treasureResponse.data).to.include(\"Private treasure\")",
              "err": {},
              "uuid": "0084fd6a-6b26-4abb-93a9-b54e8c7c0f75",
              "parentUUID": "4a2a4de3-3c8f-45cd-8550-33c3086198d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0084fd6a-6b26-4abb-93a9-b54e8c7c0f75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 8000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 8000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}